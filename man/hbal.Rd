% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hbal.R
\name{hbal}
\alias{hbal}
\title{Hierarchically Regularized Entropy Balancing}
\usage{
hbal(Treatment, X, Y, base.weight = NULL, coefs = NULL ,
 max.iterations = 200, cv = TRUE, folds = 4, expand.degree = 3,
 ds = TRUE, alpha = NULL, constraint.tolerance = 1e-3, print.level = -1, 
 penalty.position = NULL, shuffle.treat=TRUE, exclude=NULL)
}
\arguments{
\item{Treatment}{a numeric, binary vector of treatment status. 1 should denote treatment observations and 0 should denote control observations.}

\item{X}{matrix of covariates. When expand = \code{TRUE}, X is serially expanded to include higher-order terms of X.}

\item{Y}{numeric vecor of outcome variable. Used only by subsequent estimation. See \code{att}.}

\item{base.weight}{target weight distribution for the control units.}

\item{coefs}{initial coefficients for the reweighting algorithm (lambdas).}

\item{max.iterations}{maximum number of iterations. Default is 200.}

\item{cv}{whether to use cross validation. Default is \code{TRUE}.}

\item{folds}{number of folds for cross validation. Only used when cv is \code{TRUE}.}

\item{expand.degree}{degree of series expansion. 0 means no expansion. Default is 3.}

\item{ds}{whether to perform double selection prior to balancing. Default is \code{TRUE}.}

\item{alpha}{vector of ridge penalties used in grid search during cross-validation. Only used when cv is \code{TRUE}.}

\item{constraint.tolerance}{tolerance level for overall imbalance. Default is 1e-3.}

\item{print.level}{details of printed output.}

\item{penalty.position}{different groupings of the covariates. Must be specified if expand is \code{FALSE}.}

\item{shuffle.treat}{whether to use cross-validation on the treated units. Default is \code{TRUE}.}

\item{exclude}{list of covariate name pairs or triplets to be excluded.}
}
\value{
An list object of class \code{hbal} with the following elements:
\item{coefs}{vector that contains coefficients from the reweighting algorithm.}
\item{mat}{matrix of serially expanded covariates if expand=\code{TRUE}. Otherwise, the original covariate matrix is returned.}
\item{penalty}{vector of ridge penalties used for each covariate} 
\item{weights}{vector that contains the control group weights assigned by hbal.}
\item{W}{vector of treatment status}
\item{Y}{vector of outcome}
}
\description{
\code{hbal} performs hierarchically regularized entropy balancing 
such that the covariate distributions of the control group match those of the 
treatment group. \code{hbal} automatically expands the covariate space to include
higher order terms and uses cross-validation to select variable penalties for the 
balancing conditions.
}
\details{
In the simplest set-up, user can just pass in \{Treatment, X, Y\}. The default settings will serially expand
X to include higher order terms, hierarchically residualize these terms, perform double selection to only keep the relevant
variables and use cross-validation to select penalities for different groupings of the covariates.
}
\examples{
#EXAMPLE 1
set.seed(92092)
data(Lalonde)
xvars=c("age","black","educ","hisp","married","re74","re75","nodegr","u74","u75")
treat <- Lalonde$nsw
Y <- Lalonde$re78
X <- Lalonde[,xvars]
out.l <- hbal(Treatment=treat, X=X, Y=Y, exclude=list(c("educ", "nodegr")))
summary(att(out.l))

# Example 2
## Simulation from Kang and Shafer (2007).
set.seed(92092)
n <- 500
X <- mvrnorm(n, mu = rep(0, 4), Sigma = diag(4))
prop <- 1 / (1 + exp(X[,1] - 0.5 * X[,2] + 0.25*X[,3] + 0.1 * X[,4]))
# Treatment indicator
treat <- rbinom(n, 1, prop)
# Outcome
y <- 210 + 27.4*X[,1] + 13.7*X[,2] + 13.7*X[,3] + 13.7*X[,4] + rnorm(n)
# Observed covariates
X.mis <- cbind(exp(X[,1]/2), X[,2]*(1+exp(X[,1]))^(-1)+10, 
    (X[,1]*X[,3]/25+.6)^3, (X[,2]+X[,4]+20)^2)
out <- hbal(Treatment = treat, Y = y, X = X.mis)
summary(att(out))
}
\author{
Yiqing Xu, Eddie Yang
}
